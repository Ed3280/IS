@using IntranetWeb.Core.Utils;
@model IntranetWeb.ViewModel.Configuracion.Perfil
@{  Layout = null;
    ViewBag.Title = "Datos del empleado";
    ViewBag.Description = "Administración de los datos del empleado";
 }

<div class="widget-box transparent">
    <div class="widget-header">

        <h4 class="widget-title lighter"><i class="fa fa-suitcase"></i> @ViewBag.Title</h4>

        <div class="widget-toolbar no-border">

        </div>
    </div>
    <div class="widget-body">
        <div class=" widget-main">
            <div class="row">
                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.FechaIngreso)
                    @Html.TextBoxFor(m => m.Empleado.FechaIngreso, IntranetWeb.Core.Constante.AppFormat.date, new { @readonly = "readonly", @class = "form-control date-picker" })
                    @Html.ValidationMessageFor(model => model.Empleado.FechaIngreso, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.Sucursal)
                    @Html.TextBoxFor(m => m.Empleado.Sucursal, new { @Readonly = "true", Class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empleado.Sucursal, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.UnidadAdministrativa)
                    @Html.TextBoxFor(m => m.Empleado.UnidadAdministrativa, new { @Readonly = "true", Class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empleado.UnidadAdministrativa, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.Cargo)
                    @Html.TextBoxFor(m => m.Empleado.Cargo, new { @Readonly = "true", Class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empleado.Cargo, "", new { @class = "text-danger" })
                </div>
            

                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.Extension)
                    @Html.TextBoxFor(m => m.Empleado.Extension, new { @Readonly = "true", Class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empleado.Extension, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.Supervisor)
                    @Html.TextBoxFor(m => m.Empleado.Supervisor, new { @Readonly = "true", Class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empleado.Supervisor, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-4">
                    @Html.LabelBoldFor(m => m.Empleado.Email)
                    @Html.TextBoxFor(m => m.Empleado.Email, new { @Readonly = "true", Class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empleado.Email, "", new { @class = "text-danger" })
                </div>
                @Html.HiddenFor(m => m.Empleado.Id)
            </div>
        </div>
    </div>
</div>